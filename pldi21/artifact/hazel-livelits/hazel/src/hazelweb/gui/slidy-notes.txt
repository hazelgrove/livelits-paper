\(llu, model) : (Int, Int).{
  let llu_string = string_of_int llu in 
  let id = "slidy-input-" ^ llu_string in 
  let oninput1 = "let action = '(IntLit ' + document.getElementById('" in 
  let oninput2 = "').value + ')'; window.trigger("" in 
  let oninput3 = "", action); return false;" in 
  let oninput = oninput1 ^ id ^ oninput2 ^ llu_string ^ oninput3 in 
  let input_attrs = 
    ("class", "slider")::
    ("id", id)::
    ("type", "range")::
    ("min", "0")::
    ("max", "100")::
    ("oninput", oninput)::
    ("value", string_of_int model)::
    []
  let input = ("input", input_attrs, []) in 
  ("span", 
    ("class", "slider-livelit")::[], 
    input::[]);
}

SERIALIZED:

((LivelitDefLine((name(NotInVarHole $slidy))(expansion_type(OpSeq(Placeholder 0)(S Int E)))(captures((ExpLine(OpSeq(Placeholder 0)(S(ListNil NotInHole)E)))))(model_type(OpSeq(Placeholder 0)(S Int E)))(action_type(OpSeq(Placeholder 0)(S Int E)))(init((ExpLine(OpSeq(Placeholder 0)(S(IntLit NotInHole 50)E)))))(update((ExpLine(OpSeq(Placeholder 0)(S(Lam NotInHole(OpSeq(Placeholder 0)(S(TypeAnn NotInHole(Parenthesized(OpSeq(BinOp NotInHole Comma(Placeholder 0)(Placeholder 1))(S(Var NotInHole NotInVarHole model)(A Comma(S(Var NotInHole NotInVarHole action)E)))))(OpSeq(Placeholder 0)(S(Parenthesized(OpSeq(BinOp NotInHole Prod(Placeholder 0)(Placeholder 1))(S Int(A Prod(S Int E)))))E)))E))((ExpLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole action)E)))))E)))))(view((ExpLine(OpSeq(Placeholder 0)(S(Lam NotInHole(OpSeq(Placeholder 0)(S(Parenthesized(OpSeq(BinOp NotInHole Comma(Placeholder 0)(Placeholder 1))(S(Var NotInHole NotInVarHole llu)(A Comma(S(Var NotInHole NotInVarHole model)E)))))E))((LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole llu_string)E))((ExpLine(OpSeq(BinOp NotInHole Space(Placeholder 0)(Placeholder 1))(S(Var NotInHole NotInVarHole string_of_int)(A Space(S(Var NotInHole NotInVarHole llu)E)))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole id)E))((ExpLine(OpSeq(BinOp NotInHole Caret(Placeholder 0)(Placeholder 1))(S(StringLit NotInHole slidy-input-)(A Caret(S(Var NotInHole NotInVarHole llu_string)E)))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole oninput)E))((ExpLine(OpSeq(BinOp NotInHole Caret(BinOp NotInHole Caret(Placeholder 0)(Placeholder 1))(Placeholder 2))(S(StringLit NotInHole"let action = '(IntLit ' + document.getElementById('")(A Caret(S(Var NotInHole NotInVarHole id)(A Caret(S(StringLit NotInHole"').value + ')';")E)))))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole oninput)E))((ExpLine(OpSeq(BinOp NotInHole Caret(BinOp NotInHole Caret(BinOp NotInHole Caret(Placeholder 0)(Placeholder 1))(Placeholder 2))(Placeholder 3))(S(Var NotInHole NotInVarHole oninput)(A Caret(S(StringLit NotInHole"window.trigger('")(A Caret(S(Var NotInHole NotInVarHole llu_string)(A Caret(S(StringLit NotInHole"', action); return false;")E)))))))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole attrs)E))((ExpLine(OpSeq(BinOp NotInHole Cons(Placeholder 0)(Placeholder 1))(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Comma(Placeholder 0)(Placeholder 1))(S(StringLit NotInHole oninput)(A Comma(S(Var NotInHole NotInVarHole oninput)E)))))))(A Cons(S(ListNil NotInHole)E)))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole attrs)E))((ExpLine(OpSeq(BinOp NotInHole Cons(Placeholder 0)(Placeholder 1))(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Comma(Placeholder 0)(BinOp NotInHole Space(Placeholder 1)(Placeholder 2)))(S(StringLit NotInHole value)(A Comma(S(Var NotInHole NotInVarHole string_of_int)(A Space(S(Var NotInHole NotInVarHole model)E)))))))))(A Cons(S(Var NotInHole NotInVarHole attrs)E)))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole attrs)E))((ExpLine(OpSeq(BinOp NotInHole Cons(Placeholder 0)(Placeholder 1))(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Comma(Placeholder 0)(Placeholder 1))(S(StringLit NotInHole class)(A Comma(S(StringLit NotInHole slider)E)))))))(A Cons(S(Var NotInHole NotInVarHole attrs)E)))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole attrs)E))((ExpLine(OpSeq(BinOp NotInHole Cons(Placeholder 0)(Placeholder 1))(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Comma(Placeholder 0)(Placeholder 1))(S(StringLit NotInHole id)(A Comma(S(Var NotInHole NotInVarHole id)E)))))))(A Cons(S(Var NotInHole NotInVarHole attrs)E)))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole attrs)E))((ExpLine(OpSeq(BinOp NotInHole Cons(Placeholder 0)(Placeholder 1))(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Comma(Placeholder 0)(Placeholder 1))(S(StringLit NotInHole type)(A Comma(S(StringLit NotInHole range)E)))))))(A Cons(S(Var NotInHole NotInVarHole attrs)E)))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole attrs)E))((ExpLine(OpSeq(BinOp NotInHole Cons(Placeholder 0)(Placeholder 1))(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Comma(Placeholder 0)(Placeholder 1))(S(StringLit NotInHole min)(A Comma(S(StringLit NotInHole 0)E)))))))(A Cons(S(Var NotInHole NotInVarHole attrs)E)))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole attrs)E))((ExpLine(OpSeq(BinOp NotInHole Cons(Placeholder 0)(Placeholder 1))(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Comma(Placeholder 0)(Placeholder 1))(S(StringLit NotInHole max)(A Comma(S(StringLit NotInHole 100)E)))))))(A Cons(S(Var NotInHole NotInVarHole attrs)E)))))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole input)E))((ExpLine(OpSeq(Placeholder 0)(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Comma(Placeholder 0)(BinOp NotInHole Comma(Placeholder 1)(Placeholder 2)))(S(StringLit NotInHole input)(A Comma(S(Var NotInHole NotInVarHole attrs)(A Comma(S(ListNil NotInHole)E)))))))))E)))))(LetLine(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole span_attrs)E))((ExpLine(OpSeq(BinOp NotInHole Cons(Placeholder 0)(Placeholder 1))(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Comma(Placeholder 0)(Placeholder 1))(S(StringLit NotInHole class)(A Comma(S(StringLit NotInHole slider-livelit)E)))))))(A Cons(S(ListNil NotInHole)E)))))))(ExpLine(OpSeq(Placeholder 0)(S(Parenthesized((ExpLine(OpSeq(BinOp(InHole(TypeInconsistent())403)Comma(Placeholder 0)(BinOp NotInHole Comma(Placeholder 1)(BinOp NotInHole Cons(Placeholder 2)(Placeholder 3))))(S(StringLit NotInHole span)(A Comma(S(Var NotInHole NotInVarHole span_attrs)(A Comma(S(Var NotInHole NotInVarHole input)(A Cons(S(ListNil NotInHole)E)))))))))))E)))))E)))))(shape((ExpLine(OpSeq(Placeholder 0)(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Comma(Placeholder 0)(Placeholder 1))(S(BoolLit NotInHole true)(A Comma(S(IntLit NotInHole 14)E)))))))E)))))(expand((ExpLine(OpSeq(Placeholder 0)(S(Lam NotInHole(OpSeq(Placeholder 0)(S(TypeAnn NotInHole(Var NotInHole NotInVarHole m)(OpSeq(Placeholder 0)(S Int E)))E))((ExpLine(OpSeq(BinOp NotInHole Caret(BinOp NotInHole Caret(Placeholder 0)(Placeholder 1))(Placeholder 2))(S(StringLit NotInHole"(Lam NotInHole\n(OpSeq(Placeholder 0)(S(Var NotInHole NotInVarHole x)E))\n((ExpLine(OpSeq(Placeholder 0)(S(IntLit NotInHole ")(A Caret(S(Parenthesized((ExpLine(OpSeq(BinOp NotInHole Space(Placeholder 0)(Placeholder 1))(S(Var NotInHole NotInVarHole string_of_int)(A Space(S(Var NotInHole NotInVarHole m)E)))))))(A Caret(S(StringLit NotInHole")E)))))")E)))))))))E)))))))(ExpLine(OpSeq(Placeholder 0)(S(EmptyHole 215)E))))